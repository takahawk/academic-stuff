#!/usr/bin/env elixir

defmodule Des do
  def to_bits(bits) do
    for <<bit :: 1 <- bits>>, do: to_string(bit)
  end

  def print_block(<<b1::8, b2::8, b3::8, b4::8, b5::8, b6::8, b7::8, b8::8>>) do
    IO.puts to_bits(<<b1::8>>)
    IO.puts to_bits(<<b2::8>>)
    IO.puts to_bits(<<b3::8>>)
    IO.puts to_bits(<<b4::8>>)
    IO.puts to_bits(<<b5::8>>)
    IO.puts to_bits(<<b6::8>>)
    IO.puts to_bits(<<b7::8>>)
    IO.puts to_bits(<<b8::8>>)
  end

  def test do
    IO.puts "SOURCE"
    IO.puts "----------------"
    data = "AAAAAAAA"
    key = "AAAAAAADDD"
    print_block(data)
    IO.puts ""
    IO.puts "ENCRYPTED"
    IO.puts "---------------------"
    encrypted = encrypt(data, key)
    print_block(encrypted)
    IO.puts ""
    IO.puts "DECRYPTED"
    IO.puts "---------------------"
    decrypted = decrypt(encrypted, key)
    print_block(decrypted)
  end

  def encrypt(data, <<key::56, _ :: binary>>) do
    data
    |> initial_permutation
    |> iteration(generate_keys(<<key::56>>))
    |> final_permutation
  end

  def decrypt(data, <<key::56, _ :: binary>>) do
    data
    |> initial_permutation
    |> iteration_decrypt(Enum.reverse(generate_keys(<<key::56>>)))
    |> final_permutation
  end

  defp initial_permutation(<<b1::1,  b2::1,  b3::1,  b4::1,  b5::1,  b6::1,  b7::1,  b8::1,
                             b9::1,  b10::1, b11::1, b12::1, b13::1, b14::1, b15::1, b16::1,
                             b17::1, b18::1, b19::1, b20::1, b21::1, b22::1, b23::1, b24::1,
                             b25::1, b26::1, b27::1, b28::1, b29::1, b30::1, b31::1, b32::1,
                             b33::1, b34::1, b35::1, b36::1, b37::1, b38::1, b39::1, b40::1,
                             b41::1, b42::1, b43::1, b44::1, b45::1, b46::1, b47::1, b48::1,
                             b49::1, b50::1, b51::1, b52::1, b53::1, b54::1, b55::1, b56::1,
                             b57::1, b58::1, b59::1, b60::1, b61::1, b62::1, b63::1, b64::1>>) do
    <<b58::1,  b50::1,    b42::1,    b34::1,    b26::1,    b18::1,    b10::1,    b2::1,     b60::1,    b52::1,    b44::1,    b36::1,    b28::1,    b20::1,    b12::1,    b4::1,
      b62::1,  b54::1,    b46::1,    b38::1,    b30::1,    b22::1,    b14::1,    b6::1,     b64::1,    b56::1,    b48::1,    b40::1,    b32::1,    b24::1,    b16::1,    b8::1,
      b57::1,  b49::1,    b41::1,    b33::1,    b25::1,    b17::1,    b9::1,     b1::1,     b59::1,    b51::1,    b43::1,    b35::1,    b27::1,    b19::1,    b11::1,    b3::1,
      b61::1,  b53::1,    b45::1,    b37::1,    b29::1,    b21::1,    b13::1,    b5::1,     b63::1,    b55::1,    b47::1,    b39::1,    b31::1,    b23::1,    b15::1,    b7::1>>
  end

  defp e(<<b1::1,  b2::1,  b3::1,  b4::1,  b5::1,  b6::1,  b7::1,  b8::1,
           b9::1,  b10::1, b11::1, b12::1, b13::1, b14::1, b15::1, b16::1,
           b17::1, b18::1, b19::1, b20::1, b21::1, b22::1, b23::1, b24::1,
           b25::1, b26::1, b27::1, b28::1, b29::1, b30::1, b31::1, b32::1>>) do
    <<b32::1,  b1::1,     b2::1,     b3::1,     b4::1,     b5::1,
      b4::1,   b5::1,     b6::1,     b7::1,     b8::1,     b9::1,
      b8::1,   b9::1,     b10::1,    b11::1,    b12::1,    b13::1,
      b12::1,  b13::1,    b14::1,    b15::1,    b16::1,    b17::1,
      b16::1,  b17::1,    b18::1,    b19::1,    b20::1,    b21::1,
      b20::1,  b21::1,    b22::1,    b23::1,    b24::1,    b25::1,
      b24::1,  b25::1,    b26::1,    b27::1,    b28::1,    b29::1,
      b28::1,  b29::1,    b30::1,    b31::1,    b32::1,    b1::1>>
  end

  defp s(<<b1::6, b2::6, b3::6, b4::6, b5::6, b6::6, b7::6, b8::6>>) do
    <<s1(<<b1::6>>)::4, s2(<<b2::6>>)::4, s3(<<b3::6>>)::4, s4(<<b4::6>>)::4, s5(<<b5::6>>)::4, s6(<<b6::6>>)::4, s7(<<b7::6>>)::4, s8(<<b8::6>>)::4>>
  end

  defp s1(<<a1::1, b::4, a2::1>>) do
    <<a::2>> = <<a1::1, a2::1>>
    {{14,  4,  13,  1,  2,  15,  11,  8,  3,  10,  6,  12,  5,  9,  0,  7},
     {0,  15,  7,  4,  14,  2,  13,  1,  10,  6,  12,  11,   9,  5,  3,  8},
     {4,  1,  14,  8,  13,  6,  2,  11,  15,  12,  9,  7,  3,  10,  5,  0},
     {15,  12,  8,  2,  4,  9,  1,  7,  5,  11,  3,  14,  10,  0,  6,  13}} |> elem(a) |> elem(b)
  end

  defp s2(<<a1::1, b::4, a2::1>>) do
    <<a::2>> = <<a1::1, a2::1>>
    {{15,  1,  8,  14,  6,  11,  3,  4,  9,  7,  2,  13,  12,  0,  5,  10},
     {3,  13,  4,  7,  15,  2,  8,  14,  12,  0,  1,  10,  6,  9,  11,  5},
     {0,  14,  7,  11,  10,  4,  13,  1,  5,  8,  12,  6,  9,  3,  2,  15},
     {13,  8,  10,  1,  3,  15,  4,  2,  11,  6,  7,  12,  0,  5,  14,  9}} |> elem(a) |> elem(b)
  end

  defp s3(<<a1::1, b::4, a2::1>>) do
    <<a::2>> = <<a1::1, a2::1>>
    {{10,  0,  9,  14,  6,  3,  15,  5,  1,  13,  12,  7,  11,  4,  2,  8},
     {13,  7,  0,  9,  3,  4,  6,  10,  2,  8,  5,  14,  12,  11,  15,  1},
     {13,  6,  4,  9,  8,  15,  3,  0,  11,  1,  2,  12,  5,  10,  14,  7},
     {1,  10,  13,  0,  6,  9,  8,  7,  4,  15,  14,  3,  11,  5,  2,  12}} |> elem(a) |> elem(b)
  end

  defp s4(<<a1::1, b::4, a2::1>>) do
    <<a::2>> = <<a1::1, a2::1>>
    {{7,  13,  14,  3,  0,  6,  9,  10,  1,  2,  8,  5,  11,  12,  4,  15},
     {13,  8,  11,  5,  6,  15,  0,  3,  4,  7,  2,  12,  1,  10,  14,  9},
     {10,  6,  9,  0,  12,  11,  7,  13,  15,  1,  3,  14,  5,  2,  8,  4},
     {3,  15,  0,  6,  10,  1,  13,  8,  9,  4,  5,  11,  12,  7,  2,  14}} |> elem(a) |> elem(b)
  end

  defp s5(<<a1::1, b::4, a2::1>>) do
    <<a::2>> = <<a1::1, a2::1>>
    {{2,  12,  4,  1,  7,  10,  11,  6,  8,  5,  3,  15,  13,  0,  14,  9},
     {14,  11,  2,  12,  4,  7,  13,  1,  5,  0,  15,  10,  3,  9,  8,  6},
     {4,  2,  1,  11,  10,  13,  7,  8,  15,  9,  12,  5,  6,  3,  0,  14},
     {11,  8,  12,  7,  1,  14,  2,  13,  6,  15,  0,  9,  10,  4,  5,  3}} |> elem(a) |> elem(b)
  end

  defp s6(<<a1::1, b::4, a2::1>>) do
    <<a::2>> = <<a1::1, a2::1>>
    {{12,  1,  10,  15,  9,  2,  6,  8,  0,  13,  3,  4,  14,  7,  5,  11},
     {10,  15,  4,  2,  7,  12,  9,  5,  6,  1,  13,  14,  0,  11,  3,  8},
     {9,  14,  15,  5,  2,  8,  12,  3,  7,  0,  4,  10,  1,  13,  11,  6},
     {4,  3,  2,  12,  9,  5,  15,  10,  11,  14,  1,  7,  6,  0,  8,  13}} |> elem(a) |> elem(b)
  end

  defp s7(<<a1::1, b::4, a2::1>>) do
    <<a::2>> = <<a1::1, a2::1>>
    {{4,  11,  2,  14,  15,  0,  8,  13,  3,  12,  9,  7,  5,  10,  6,  1},
     {13,  0,  11,  7,  4,  9,  1,  10,  14,  3,  5,  12,  2,  15,  8,  6},
     {1,  4,  11,  13,  12,  3,  7,  14,  10,  15,  6,  8,  0,  5,  9,  2},
     {6,  11,  13,  8,  1,  4,  10,  7,  9,  5,  0,  15,  14,  2,  3,  12}} |> elem(a) |> elem(b)
  end

  defp s8(<<a1::1, b::4, a2::1>>) do
    <<a::2>> = <<a1::1, a2::1>>
    {{13,  2,  8,  4,  6,  15,  11,  1,  10,  9,  3,  14,  5,  0,  12,  7},
     {1,  15,  13,  8,  10,  3,  7,  4,  12,  5,  6,  11,  0,  14,  9,  2},
     {7,  11,  4,  1,  9,  12,  14,  2,  0,  6,  10,  13,  15,  3,  5,  8},
     {2,  1,  14,  7,  4,  10,  8,  13,  15,  12,  9,  0,  3,  5,  6,  11}} |> elem(a) |> elem(b)
  end

  defp p(<<b1::1,  b2::1,  b3::1,  b4::1,  b5::1,  b6::1,  b7::1,  b8::1,
           b9::1,  b10::1, b11::1, b12::1, b13::1, b14::1, b15::1, b16::1,
           b17::1, b18::1, b19::1, b20::1, b21::1, b22::1, b23::1, b24::1,
           b25::1, b26::1, b27::1, b28::1, b29::1, b30::1, b31::1, b32::1>>) do
    <<b16::1,  b7::1,  b20::1,  b21::1,  b29::1,  b12::1,  b28::1,  b17::1,
      b1::1,  b15::1,  b23::1,  b26::1,  b5::1,  b18::1,  b31::1,  b10::1,
      b2::1,  b8::1,  b24::1,  b14::1,  b32::1,  b27::1,  b3::1,  b9::1,
      b19::1,  b13::1,  b30::1,  b6::1,  b22::1,  b11::1,  b4::1,  b25::1>>
  end

  defp generate_keys(<<b1::1,  b2::1,  b3::1,  b4::1,  b5::1,  b6::1,  b7::1,
                       b9::1,  b10::1, b11::1, b12::1, b13::1, b14::1, b15::1,
                       b17::1, b18::1, b19::1, b20::1, b21::1, b22::1, b23::1,
                       b25::1, b26::1, b27::1, b28::1, b29::1, b30::1, b31::1,
                       b33::1, b34::1, b35::1, b36::1, b37::1, b38::1, b39::1,
                       b41::1, b42::1, b43::1, b44::1, b45::1, b46::1, b47::1,
                       b49::1, b50::1, b51::1, b52::1, b53::1, b54::1, b55::1,
                       b57::1, b58::1, b59::1, b60::1, b61::1, b62::1, b63::1>>) do
    c = <<b57::1,  b49::1,  b41::1,  b33::1,  b25::1,  b17::1,  b9::1,  b1::1,  b58::1,  b50::1,  b42::1,  b34::1,  b26::1,  b18::1,
          b10::1,  b2::1,  b59::1,  b51::1,  b43::1,  b35::1,  b27::1,  b19::1,  b11::1,  b3::1,  b60::1,  b52::1,  b44::1,  b36::1>>
    d = <<b63::1,  b55::1,  b47::1,  b39::1,  b31::1,  b23::1,  b15::1,  b7::1,  b62::1,  b54::1,  b46::1,  b38::1,  b30::1,  b22::1,
          b14::1,  b6::1,  b61::1,  b53::1,  b45::1,  b37::1,  b29::1,  b21::1,  b13::1,  b5::1,  b28::1,  b20::1,  b12::1,  b4::1>>
    generate_key_list(c, d)
  end

  @key_shifts { 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1}

  def generate_key_list(c, d, i \\ 0, acc \\ [])
  def generate_key_list(_, _, i, acc) when i >= 16, do: Enum.reverse acc
  def generate_key_list(c, d, i, acc) do
    c1 = cshl(c, @key_shifts |> elem(i))
    d1 = cshl(d, @key_shifts |> elem(i))

    <<b1::1,  b2::1,  b3::1,  b4::1,  b5::1,  b6::1,  b7::1,  b8::1,
      _::1,  b10::1, b11::1, b12::1, b13::1, b14::1, b15::1, b16::1,
      b17::1, _::1, b19::1, b20::1, b21::1, _::1, b23::1, b24::1,
      _::1, b26::1, b27::1, b28::1>> = c1
    <<b29::1, b30::1, b31::1, b32::1,
      b33::1, b34::1, _::1, b36::1, b37::1, _::1, b39::1, b40::1,
      b41::1, b42::1, _::1, b44::1, b45::1, b46::1, b47::1, b48::1,
      b49::1, b50::1, b51::1, b52::1, b53::1, _::1, b55::1, b56::1>> = d1
    key = <<b14::1,  b17::1,  b11::1,  b24::1,  b1::1,  b5::1,  b3::1,  b28::1,  b15::1,  b6::1,  b21::1,  b10::1,  b23::1,  b19::1,  b12::1,  b4::1,
            b26::1,  b8::1,  b16::1,  b7::1,  b27::1,  b20::1,  b13::1,  b2::1,  b41::1,  b52::1,  b31::1,  b37::1,  b47::1,  b55::1,  b30::1,  b40::1,
            b51::1,  b45::1,  b33::1,  b48::1,  b44::1,  b49::1,  b39::1,  b56::1,  b34::1,  b53::1,  b46::1,  b42::1,  b50::1,  b36::1,  b29::1,  b32::1>>
    generate_key_list(c1, d1, i + 1, [key | acc])
  end

  defp cshl(bits, n) when n == 0, do: bits

  defp cshl(<<b1::1,  b2::1,  b3::1,  b4::1,  b5::1,  b6::1,  b7::1, b8::1,
              b9::1,  b10::1, b11::1, b12::1, b13::1, b14::1, b15::1, b16::1,
              b17::1, b18::1, b19::1, b20::1, b21::1, b22::1, b23::1, b24::1,
              b25::1, b26::1, b27::1, b28::1>>, n) do
    cshl(<<b2::1, b3::1, b4::1, b5::1, b6::1, b7::1, b8::1, b9::1, b10::1, b11::1, b12::1, b13::1, b14::1, b15::1,
           b16::1, b17::1, b18::1, b19::1, b20::1, b21::1, b22::1, b23::1, b24::1, b25::1, b26::1, b27::1, b28::1, b1::1>>, n - 1)
  end


  defp iteration(data, []), do: data
  defp iteration(<<l::32, r::32>>, [key | remaining_keys]) do
    l1 = r
    <<r1::32>> = :crypto.exor(f(<<r::32>>, key), <<l::32>>)
    iteration(<<l1::32, r1::32>>, remaining_keys)
  end

  defp iteration_decrypt(data, []), do: data
  defp iteration_decrypt(<<l::32, r::32>>, [key | remaining_keys]) do
    r1 = l
    <<l1::32>> = :crypto.exor(f(<<l::32>>, key), <<r::32>>)
    iteration_decrypt(<<l1::32, r1::32>>, remaining_keys)
  end

  defp f(bits, key) do
    # feistel iteration
    bits
    |> e
    |> :crypto.exor(key)
    |> s
    |> p
  end

  defp final_permutation(<<b1::1,  b2::1,  b3::1,  b4::1,  b5::1,  b6::1,  b7::1,  b8::1,
                           b9::1,  b10::1, b11::1, b12::1, b13::1, b14::1, b15::1, b16::1,
                           b17::1, b18::1, b19::1, b20::1, b21::1, b22::1, b23::1, b24::1,
                           b25::1, b26::1, b27::1, b28::1, b29::1, b30::1, b31::1, b32::1,
                           b33::1, b34::1, b35::1, b36::1, b37::1, b38::1, b39::1, b40::1,
                           b41::1, b42::1, b43::1, b44::1, b45::1, b46::1, b47::1, b48::1,
                           b49::1, b50::1, b51::1, b52::1, b53::1, b54::1, b55::1, b56::1,
                           b57::1, b58::1, b59::1, b60::1, b61::1, b62::1, b63::1, b64::1>>) do
    <<b40::1,  b8::1,  b48::1,  b16::1,  b56::1,  b24::1,  b64::1,  b32::1,  b39::1,  b7::1,  b47::1,  b15::1,  b55::1,  b23::1,  b63::1,  b31::1,
      b38::1,  b6::1,  b46::1,  b14::1,  b54::1,  b22::1,  b62::1,  b30::1,  b37::1,  b5::1,  b45::1,  b13::1,  b53::1,  b21::1,  b61::1,  b29::1,
      b36::1,  b4::1,  b44::1,  b12::1,  b52::1,  b20::1,  b60::1,  b28::1,  b35::1,  b3::1,  b43::1,  b11::1,  b51::1,  b19::1,  b59::1,  b27::1,
      b34::1,  b2::1,  b42::1,  b10::1,  b50::1,  b18::1,  b58::1,  b26::1,  b33::1,  b1::1,  b41::1,  b9::1,  b49::1,  b17::1,  b57::1,  b25::1>>
  end

end

Des.test()
